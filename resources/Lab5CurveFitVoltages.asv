function Lab5CurveFitVoltages
    decimal = binaryVectorToDecimal([...
     0 0 0 1 1 0 1 1 0 0 0 1; ...
     0 0 1 0 1 0 1 1 0 1 1 1; ...
     0 1 0 0 0 0 1 0 0 1 0 1; ...
     0 1 0 1 0 1 0 0 1 0 0 1; ...
     0 1 1 0 0 0 1 1 1 0 0 0; ...
     0 1 1 1 0 0 1 0 1 0 0 1; ...
     0 1 1 1 1 1 0 1 0 0 1 1 ; ...
     1 0 0 0 0 1 1 0 1 1 1 0; ...
     1 0 0 1 0 0 0 0 1 1 0 0; ...
     1 0 0 1 1 0 0 0 0 0 1 0; ...
     1 0 0 1 1 1 1 1 1 1 0 1; ...
     1 0 1 0 0 1 1 0 1 0 1 1; ...
     1 0 1 0 1 0 0 1 1 1 1 1; ...
     1 0 1 0 1 1 1 1 1 1 0 0; ...
     1 0 1 1 0 0 1 0 1 0 1 1; ...
     1 0 1 1 0 1 1 0 0 0 1 0; ...
     1 0 1 1 1 0 0 1 0 0 1 0; ...
     1 0 1 1 1 1 0 0 0 0 1 1 ; ...
     1 0 1 1 1 1 1 1 0 0 0 0 ; ...
     1 1 0 0 0 0 1 0 0 0 0 0 ; ...
     1 1 0 0 0 0 1 1 0 1 1 1; ...
     1 1 0 0 0 1 1 0 0 1 1 0 ; ...
     1 1 0 0 0 1 1 1 1 1 1 1; ...
     1 1 0 0 1 0 0 1 0 1 1 1; ...
     1 1 0 0 1 1 0 0 1 1 0 1 ; ...
     1 1 0 0 1 1 1 0 0 1 1 0 ; ...
     1 1 0 0 1 1 1 1 1 1 0 1 ; ...
     1 1 0 1 0 0 0 1 0 1 0 1; ...
     1 1 0 1 0 0 1 0 1 1 0 1 ; ...
     1 1 0 1 0 1 0 0 0 1 1 0 ; ...
     1 1 0 1 0 1 0 1 1 1 0 1; ...
     1 1 0 1 0 1 0 1 1 1 0 1; ...
     1 1 0 1 0 1 1 1 0 1 0 1 ; ...
     1 1 0 1 1 0 0 0 1 1 0 0 ; ...
     1 1 0 1 1 0 0 0 1 1 0 0; ...
     1 1 0 1 1 0 1 0 0 1 0 1 ; ...
     1 1 0 1 1 0 1 0 0 1 0 1 ; ...
     1 1 0 1 1 0 1 1 1 1 0 0 ; ...
     1 1 0 1 1 0 1 1 1 1 0 1 ; ...
     1 1 0 1 1 1 1 0 1 0 1 1 ; ...
     1 1 1 0 0 0 0 0 0 1 0 1 ; ...
     1 1 1 0 0 0 0 0 0 1 0 1 ; ...
     1 1 1 0 0 0 0 0 0 1 0 1; ...
     1 1 1 0 0 0 0 1 1 1 0 0; ...
     1 1 1 0 0 0 0 1 1 1 0 1]);

    analogVoltage = [2.73 2.35 2.02 1.775 1.56 1.4 1.26 1.06 0.93 0.81 0.73 0.65 0.52 0.42];
    
    distanceCm = [4 5 6 7 8 9 10 12 14 16 18 20 25 30];
    
    % fittedCurve = cftool(analogVoltage,distanceCm);
    

    Bin = [ 1 1 1 0 0 1 1 0 1 1 0 0; ...
        1 1 1 0 0 1 0 1 0 0 1 1; ...
        1 1 1 0 0 0 1 1 1 0 1 1; ...
        1 1 1 0 0 0 1 0 0 1 0 1; ...
        1 1 1 0 0 0 0 0 1 1 1 0; ...
        1 1 0 1 1 1 1 1 0 1 1 0; ...
        1 1 0 1 1 1 0 1 1 1 1 1; ...
        1 1 0 1 1 1 0 0 0 1 1 0; ...
        1 1 0 1 1 0 1 0 1 1 1 0; ...
        1 1 0 1 1 0 0 1 0 1 1 0; ...
        1 1 0 1 0 1 1 1 1 1 1 1; ...
        1 1 0 1 0 1 1 0 0 1 1 1; ...
        1 1 0 1 0 1 0 1 0 0 0 0; ...
        1 1 0 1 0 0 1 1 1 0 0 0; ...
        1 1 0 1 0 0 1 0 0 0 0 0; ...
        1 1 0 1 0 0 0 0 1 0 0 0; ...
        1 1 0 0 1 1 1 1 0 0 0 1; ...
        1 1 0 0 1 1 0 1 1 0 0 1; ...
        1 1 0 0 1 1 0 0 0 0 0 1; ...
        1 1 0 0 1 0 1 0 0 1 1 0; ...1 1 0 0 1 0 1 0 0 0 0 1
        1 1 0 0 1 0 0 0 1 0 1 1; ...
        1 1 0 0 0 1 1 1 0 0 1 1; ...
        1 1 0 0 0 1 0 1 1 0 1 1];
Dec = binaryVectorToDecimal(Bin);
Dist = [ 13.5 12.625 12.125 11.625 10.9375 10.5 10 9.5625 9.25 8.9375 8.625 8.3125 8.0625 7.8125 7.5625 7.375 7.1875 7 6.8125 6.6875 6.4375 6.3125 6.1875 6];
Mid = 1/2*(Dist(2:end) + Dist(1:end-1));
lin_dist = interp1(Dec, Mid, 0:2^12-1)/0.393701*2^7;
lin_dist_round = round(lin_dist, 0);
lin_dist_round(is_nan(lin_dist(3600:2^12))) = inf;
lin_dist_round(lin_dist_round >= 4096


    n_i = 12;
    n_o = 12;
    sig = 5;
    
    pol = [0.062221459327056   0.598269841388361   2.283058650701620   4.706357612208598   6.603104179508233   8.819927771996170  11.764462435127044];
    
    
    V = ((0:2^n_i-1) - 2891)/813;
    d_original = polyval(pol,V)*2^(n_o - sig);
    d_rounded = round(d_original, 0);
    d_saturated = min(d_rounded, 2^n_o - 1);
    d_binary = de2bi(d_saturated, n_o);

    fid = fopen('Curve.coe','wt');
    fprintf(fid, 'memory_initialization_radix = 2;\n');
    fprintf(fid, 'memory_initialization_vector =\n');
    for index = 1:2^n_i
        fprintf(fid, '%d', d_binary(index,end:-1:1));
        if (index == 2^n_i)
            fprintf(fid, ';\n');
        else
            fprintf(fid, ',\n');
        end
    end
    fclose(fid);
end

function Bi = de2bi(De, n)
    Bi = zeros(length(De), n);
    for bit = 1:n
        Bi(:,bit) = round(mod(De,2),0);
        De = floor((De + 0.25)/2);
    end
end